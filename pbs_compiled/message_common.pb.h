// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_common.proto

#ifndef PROTOBUF_message_5fcommon_2eproto__INCLUDED
#define PROTOBUF_message_5fcommon_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace rpc {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_message_5fcommon_2eproto();
void protobuf_AssignDesc_message_5fcommon_2eproto();
void protobuf_ShutdownFile_message_5fcommon_2eproto();

class WorkGroupInfo;

enum Filter {
  EXISTING_ONLY = 0,
  DELETED_ONLY = 1,
  ALL_ENTRIES = 2
};
bool Filter_IsValid(int value);
const Filter Filter_MIN = EXISTING_ONLY;
const Filter Filter_MAX = ALL_ENTRIES;
const int Filter_ARRAYSIZE = Filter_MAX + 1;

const ::google::protobuf::EnumDescriptor* Filter_descriptor();
inline const ::std::string& Filter_Name(Filter value) {
  return ::google::protobuf::internal::NameOfEnum(
    Filter_descriptor(), value);
}
inline bool Filter_Parse(
    const ::std::string& name, Filter* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Filter>(
    Filter_descriptor(), name, value);
}
// ===================================================================

class WorkGroupInfo : public ::google::protobuf::Message {
 public:
  WorkGroupInfo();
  virtual ~WorkGroupInfo();

  WorkGroupInfo(const WorkGroupInfo& from);

  inline WorkGroupInfo& operator=(const WorkGroupInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorkGroupInfo& default_instance();

  void Swap(WorkGroupInfo* other);

  // implements Message ----------------------------------------------

  inline WorkGroupInfo* New() const { return New(NULL); }

  WorkGroupInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorkGroupInfo& from);
  void MergeFrom(const WorkGroupInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WorkGroupInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 workgroup_id = 1;
  bool has_workgroup_id() const;
  void clear_workgroup_id();
  static const int kWorkgroupIdFieldNumber = 1;
  ::google::protobuf::int64 workgroup_id() const;
  void set_workgroup_id(::google::protobuf::int64 value);

  // optional string workgroup_name = 2;
  bool has_workgroup_name() const;
  void clear_workgroup_name();
  static const int kWorkgroupNameFieldNumber = 2;
  const ::std::string& workgroup_name() const;
  void set_workgroup_name(const ::std::string& value);
  void set_workgroup_name(const char* value);
  void set_workgroup_name(const char* value, size_t size);
  ::std::string* mutable_workgroup_name();
  ::std::string* release_workgroup_name();
  void set_allocated_workgroup_name(::std::string* workgroup_name);

  // optional string description = 3;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 3;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // optional string creator_login = 4;
  bool has_creator_login() const;
  void clear_creator_login();
  static const int kCreatorLoginFieldNumber = 4;
  const ::std::string& creator_login() const;
  void set_creator_login(const ::std::string& value);
  void set_creator_login(const char* value);
  void set_creator_login(const char* value, size_t size);
  ::std::string* mutable_creator_login();
  ::std::string* release_creator_login();
  void set_allocated_creator_login(::std::string* creator_login);

  // optional int64 access_mode = 5;
  bool has_access_mode() const;
  void clear_access_mode();
  static const int kAccessModeFieldNumber = 5;
  ::google::protobuf::int64 access_mode() const;
  void set_access_mode(::google::protobuf::int64 value);

  // optional bool invite_accepted = 8;
  bool has_invite_accepted() const;
  void clear_invite_accepted();
  static const int kInviteAcceptedFieldNumber = 8;
  bool invite_accepted() const;
  void set_invite_accepted(bool value);

  // optional string key = 9;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 9;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional string key_signature = 10;
  bool has_key_signature() const;
  void clear_key_signature();
  static const int kKeySignatureFieldNumber = 10;
  const ::std::string& key_signature() const;
  void set_key_signature(const ::std::string& value);
  void set_key_signature(const char* value);
  void set_key_signature(const char* value, size_t size);
  ::std::string* mutable_key_signature();
  ::std::string* release_key_signature();
  void set_allocated_key_signature(::std::string* key_signature);

  // optional string key_salt = 11;
  bool has_key_salt() const;
  void clear_key_salt();
  static const int kKeySaltFieldNumber = 11;
  const ::std::string& key_salt() const;
  void set_key_salt(const ::std::string& value);
  void set_key_salt(const char* value);
  void set_key_salt(const char* value, size_t size);
  ::std::string* mutable_key_salt();
  ::std::string* release_key_salt();
  void set_allocated_key_salt(::std::string* key_salt);

  // optional int32 encryption_algo = 12;
  bool has_encryption_algo() const;
  void clear_encryption_algo();
  static const int kEncryptionAlgoFieldNumber = 12;
  ::google::protobuf::int32 encryption_algo() const;
  void set_encryption_algo(::google::protobuf::int32 value);

  // optional int32 encryption_type = 13;
  bool has_encryption_type() const;
  void clear_encryption_type();
  static const int kEncryptionTypeFieldNumber = 13;
  ::google::protobuf::int32 encryption_type() const;
  void set_encryption_type(::google::protobuf::int32 value);

  // optional int64 size = 16;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 16;
  ::google::protobuf::int64 size() const;
  void set_size(::google::protobuf::int64 value);

  // optional int64 creation_date = 17;
  bool has_creation_date() const;
  void clear_creation_date();
  static const int kCreationDateFieldNumber = 17;
  ::google::protobuf::int64 creation_date() const;
  void set_creation_date(::google::protobuf::int64 value);

  // optional int64 deletion_date = 18;
  bool has_deletion_date() const;
  void clear_deletion_date();
  static const int kDeletionDateFieldNumber = 18;
  ::google::protobuf::int64 deletion_date() const;
  void set_deletion_date(::google::protobuf::int64 value);

  // optional string creation_date_str = 19;
  bool has_creation_date_str() const;
  void clear_creation_date_str();
  static const int kCreationDateStrFieldNumber = 19;
  const ::std::string& creation_date_str() const;
  void set_creation_date_str(const ::std::string& value);
  void set_creation_date_str(const char* value);
  void set_creation_date_str(const char* value, size_t size);
  ::std::string* mutable_creation_date_str();
  ::std::string* release_creation_date_str();
  void set_allocated_creation_date_str(::std::string* creation_date_str);

  // optional string deletion_date_str = 20;
  bool has_deletion_date_str() const;
  void clear_deletion_date_str();
  static const int kDeletionDateStrFieldNumber = 20;
  const ::std::string& deletion_date_str() const;
  void set_deletion_date_str(const ::std::string& value);
  void set_deletion_date_str(const char* value);
  void set_deletion_date_str(const char* value, size_t size);
  ::std::string* mutable_deletion_date_str();
  ::std::string* release_deletion_date_str();
  void set_allocated_deletion_date_str(::std::string* deletion_date_str);

  // optional bool is_deleted = 23;
  bool has_is_deleted() const;
  void clear_is_deleted();
  static const int kIsDeletedFieldNumber = 23;
  bool is_deleted() const;
  void set_is_deleted(bool value);

  // optional int64 company_id = 24;
  bool has_company_id() const;
  void clear_company_id();
  static const int kCompanyIdFieldNumber = 24;
  ::google::protobuf::int64 company_id() const;
  void set_company_id(::google::protobuf::int64 value);

  // optional int32 workgroup_type = 25;
  bool has_workgroup_type() const;
  void clear_workgroup_type();
  static const int kWorkgroupTypeFieldNumber = 25;
  ::google::protobuf::int32 workgroup_type() const;
  void set_workgroup_type(::google::protobuf::int32 value);

  // optional string workgroup_metadata = 26;
  bool has_workgroup_metadata() const;
  void clear_workgroup_metadata();
  static const int kWorkgroupMetadataFieldNumber = 26;
  const ::std::string& workgroup_metadata() const;
  void set_workgroup_metadata(const ::std::string& value);
  void set_workgroup_metadata(const char* value);
  void set_workgroup_metadata(const char* value, size_t size);
  ::std::string* mutable_workgroup_metadata();
  ::std::string* release_workgroup_metadata();
  void set_allocated_workgroup_metadata(::std::string* workgroup_metadata);

  // optional int64 files_count = 27;
  bool has_files_count() const;
  void clear_files_count();
  static const int kFilesCountFieldNumber = 27;
  ::google::protobuf::int64 files_count() const;
  void set_files_count(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:rpc.WorkGroupInfo)
 private:
  inline void set_has_workgroup_id();
  inline void clear_has_workgroup_id();
  inline void set_has_workgroup_name();
  inline void clear_has_workgroup_name();
  inline void set_has_description();
  inline void clear_has_description();
  inline void set_has_creator_login();
  inline void clear_has_creator_login();
  inline void set_has_access_mode();
  inline void clear_has_access_mode();
  inline void set_has_invite_accepted();
  inline void clear_has_invite_accepted();
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_key_signature();
  inline void clear_has_key_signature();
  inline void set_has_key_salt();
  inline void clear_has_key_salt();
  inline void set_has_encryption_algo();
  inline void clear_has_encryption_algo();
  inline void set_has_encryption_type();
  inline void clear_has_encryption_type();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_creation_date();
  inline void clear_has_creation_date();
  inline void set_has_deletion_date();
  inline void clear_has_deletion_date();
  inline void set_has_creation_date_str();
  inline void clear_has_creation_date_str();
  inline void set_has_deletion_date_str();
  inline void clear_has_deletion_date_str();
  inline void set_has_is_deleted();
  inline void clear_has_is_deleted();
  inline void set_has_company_id();
  inline void clear_has_company_id();
  inline void set_has_workgroup_type();
  inline void clear_has_workgroup_type();
  inline void set_has_workgroup_metadata();
  inline void clear_has_workgroup_metadata();
  inline void set_has_files_count();
  inline void clear_has_files_count();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 workgroup_id_;
  ::google::protobuf::internal::ArenaStringPtr workgroup_name_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr creator_login_;
  ::google::protobuf::int64 access_mode_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr key_signature_;
  ::google::protobuf::internal::ArenaStringPtr key_salt_;
  ::google::protobuf::int32 encryption_algo_;
  ::google::protobuf::int32 encryption_type_;
  ::google::protobuf::int64 size_;
  ::google::protobuf::int64 creation_date_;
  ::google::protobuf::int64 deletion_date_;
  bool invite_accepted_;
  bool is_deleted_;
  ::google::protobuf::int32 workgroup_type_;
  ::google::protobuf::internal::ArenaStringPtr creation_date_str_;
  ::google::protobuf::internal::ArenaStringPtr deletion_date_str_;
  ::google::protobuf::int64 company_id_;
  ::google::protobuf::internal::ArenaStringPtr workgroup_metadata_;
  ::google::protobuf::int64 files_count_;
  friend void  protobuf_AddDesc_message_5fcommon_2eproto();
  friend void protobuf_AssignDesc_message_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_message_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static WorkGroupInfo* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// WorkGroupInfo

// optional int64 workgroup_id = 1;
inline bool WorkGroupInfo::has_workgroup_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorkGroupInfo::set_has_workgroup_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorkGroupInfo::clear_has_workgroup_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorkGroupInfo::clear_workgroup_id() {
  workgroup_id_ = GOOGLE_LONGLONG(0);
  clear_has_workgroup_id();
}
inline ::google::protobuf::int64 WorkGroupInfo::workgroup_id() const {
  // @@protoc_insertion_point(field_get:rpc.WorkGroupInfo.workgroup_id)
  return workgroup_id_;
}
inline void WorkGroupInfo::set_workgroup_id(::google::protobuf::int64 value) {
  set_has_workgroup_id();
  workgroup_id_ = value;
  // @@protoc_insertion_point(field_set:rpc.WorkGroupInfo.workgroup_id)
}

// optional string workgroup_name = 2;
inline bool WorkGroupInfo::has_workgroup_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorkGroupInfo::set_has_workgroup_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorkGroupInfo::clear_has_workgroup_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorkGroupInfo::clear_workgroup_name() {
  workgroup_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_workgroup_name();
}
inline const ::std::string& WorkGroupInfo::workgroup_name() const {
  // @@protoc_insertion_point(field_get:rpc.WorkGroupInfo.workgroup_name)
  return workgroup_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkGroupInfo::set_workgroup_name(const ::std::string& value) {
  set_has_workgroup_name();
  workgroup_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rpc.WorkGroupInfo.workgroup_name)
}
inline void WorkGroupInfo::set_workgroup_name(const char* value) {
  set_has_workgroup_name();
  workgroup_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rpc.WorkGroupInfo.workgroup_name)
}
inline void WorkGroupInfo::set_workgroup_name(const char* value, size_t size) {
  set_has_workgroup_name();
  workgroup_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rpc.WorkGroupInfo.workgroup_name)
}
inline ::std::string* WorkGroupInfo::mutable_workgroup_name() {
  set_has_workgroup_name();
  // @@protoc_insertion_point(field_mutable:rpc.WorkGroupInfo.workgroup_name)
  return workgroup_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorkGroupInfo::release_workgroup_name() {
  clear_has_workgroup_name();
  return workgroup_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkGroupInfo::set_allocated_workgroup_name(::std::string* workgroup_name) {
  if (workgroup_name != NULL) {
    set_has_workgroup_name();
  } else {
    clear_has_workgroup_name();
  }
  workgroup_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), workgroup_name);
  // @@protoc_insertion_point(field_set_allocated:rpc.WorkGroupInfo.workgroup_name)
}

// optional string description = 3;
inline bool WorkGroupInfo::has_description() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorkGroupInfo::set_has_description() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorkGroupInfo::clear_has_description() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorkGroupInfo::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
inline const ::std::string& WorkGroupInfo::description() const {
  // @@protoc_insertion_point(field_get:rpc.WorkGroupInfo.description)
  return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkGroupInfo::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rpc.WorkGroupInfo.description)
}
inline void WorkGroupInfo::set_description(const char* value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rpc.WorkGroupInfo.description)
}
inline void WorkGroupInfo::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rpc.WorkGroupInfo.description)
}
inline ::std::string* WorkGroupInfo::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:rpc.WorkGroupInfo.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorkGroupInfo::release_description() {
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkGroupInfo::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:rpc.WorkGroupInfo.description)
}

// optional string creator_login = 4;
inline bool WorkGroupInfo::has_creator_login() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WorkGroupInfo::set_has_creator_login() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WorkGroupInfo::clear_has_creator_login() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WorkGroupInfo::clear_creator_login() {
  creator_login_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_creator_login();
}
inline const ::std::string& WorkGroupInfo::creator_login() const {
  // @@protoc_insertion_point(field_get:rpc.WorkGroupInfo.creator_login)
  return creator_login_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkGroupInfo::set_creator_login(const ::std::string& value) {
  set_has_creator_login();
  creator_login_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rpc.WorkGroupInfo.creator_login)
}
inline void WorkGroupInfo::set_creator_login(const char* value) {
  set_has_creator_login();
  creator_login_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rpc.WorkGroupInfo.creator_login)
}
inline void WorkGroupInfo::set_creator_login(const char* value, size_t size) {
  set_has_creator_login();
  creator_login_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rpc.WorkGroupInfo.creator_login)
}
inline ::std::string* WorkGroupInfo::mutable_creator_login() {
  set_has_creator_login();
  // @@protoc_insertion_point(field_mutable:rpc.WorkGroupInfo.creator_login)
  return creator_login_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorkGroupInfo::release_creator_login() {
  clear_has_creator_login();
  return creator_login_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkGroupInfo::set_allocated_creator_login(::std::string* creator_login) {
  if (creator_login != NULL) {
    set_has_creator_login();
  } else {
    clear_has_creator_login();
  }
  creator_login_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), creator_login);
  // @@protoc_insertion_point(field_set_allocated:rpc.WorkGroupInfo.creator_login)
}

// optional int64 access_mode = 5;
inline bool WorkGroupInfo::has_access_mode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WorkGroupInfo::set_has_access_mode() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WorkGroupInfo::clear_has_access_mode() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WorkGroupInfo::clear_access_mode() {
  access_mode_ = GOOGLE_LONGLONG(0);
  clear_has_access_mode();
}
inline ::google::protobuf::int64 WorkGroupInfo::access_mode() const {
  // @@protoc_insertion_point(field_get:rpc.WorkGroupInfo.access_mode)
  return access_mode_;
}
inline void WorkGroupInfo::set_access_mode(::google::protobuf::int64 value) {
  set_has_access_mode();
  access_mode_ = value;
  // @@protoc_insertion_point(field_set:rpc.WorkGroupInfo.access_mode)
}

// optional bool invite_accepted = 8;
inline bool WorkGroupInfo::has_invite_accepted() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WorkGroupInfo::set_has_invite_accepted() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WorkGroupInfo::clear_has_invite_accepted() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WorkGroupInfo::clear_invite_accepted() {
  invite_accepted_ = false;
  clear_has_invite_accepted();
}
inline bool WorkGroupInfo::invite_accepted() const {
  // @@protoc_insertion_point(field_get:rpc.WorkGroupInfo.invite_accepted)
  return invite_accepted_;
}
inline void WorkGroupInfo::set_invite_accepted(bool value) {
  set_has_invite_accepted();
  invite_accepted_ = value;
  // @@protoc_insertion_point(field_set:rpc.WorkGroupInfo.invite_accepted)
}

// optional string key = 9;
inline bool WorkGroupInfo::has_key() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WorkGroupInfo::set_has_key() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WorkGroupInfo::clear_has_key() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WorkGroupInfo::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& WorkGroupInfo::key() const {
  // @@protoc_insertion_point(field_get:rpc.WorkGroupInfo.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkGroupInfo::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rpc.WorkGroupInfo.key)
}
inline void WorkGroupInfo::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rpc.WorkGroupInfo.key)
}
inline void WorkGroupInfo::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rpc.WorkGroupInfo.key)
}
inline ::std::string* WorkGroupInfo::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:rpc.WorkGroupInfo.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorkGroupInfo::release_key() {
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkGroupInfo::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:rpc.WorkGroupInfo.key)
}

// optional string key_signature = 10;
inline bool WorkGroupInfo::has_key_signature() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void WorkGroupInfo::set_has_key_signature() {
  _has_bits_[0] |= 0x00000080u;
}
inline void WorkGroupInfo::clear_has_key_signature() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void WorkGroupInfo::clear_key_signature() {
  key_signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key_signature();
}
inline const ::std::string& WorkGroupInfo::key_signature() const {
  // @@protoc_insertion_point(field_get:rpc.WorkGroupInfo.key_signature)
  return key_signature_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkGroupInfo::set_key_signature(const ::std::string& value) {
  set_has_key_signature();
  key_signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rpc.WorkGroupInfo.key_signature)
}
inline void WorkGroupInfo::set_key_signature(const char* value) {
  set_has_key_signature();
  key_signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rpc.WorkGroupInfo.key_signature)
}
inline void WorkGroupInfo::set_key_signature(const char* value, size_t size) {
  set_has_key_signature();
  key_signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rpc.WorkGroupInfo.key_signature)
}
inline ::std::string* WorkGroupInfo::mutable_key_signature() {
  set_has_key_signature();
  // @@protoc_insertion_point(field_mutable:rpc.WorkGroupInfo.key_signature)
  return key_signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorkGroupInfo::release_key_signature() {
  clear_has_key_signature();
  return key_signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkGroupInfo::set_allocated_key_signature(::std::string* key_signature) {
  if (key_signature != NULL) {
    set_has_key_signature();
  } else {
    clear_has_key_signature();
  }
  key_signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_signature);
  // @@protoc_insertion_point(field_set_allocated:rpc.WorkGroupInfo.key_signature)
}

// optional string key_salt = 11;
inline bool WorkGroupInfo::has_key_salt() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void WorkGroupInfo::set_has_key_salt() {
  _has_bits_[0] |= 0x00000100u;
}
inline void WorkGroupInfo::clear_has_key_salt() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void WorkGroupInfo::clear_key_salt() {
  key_salt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key_salt();
}
inline const ::std::string& WorkGroupInfo::key_salt() const {
  // @@protoc_insertion_point(field_get:rpc.WorkGroupInfo.key_salt)
  return key_salt_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkGroupInfo::set_key_salt(const ::std::string& value) {
  set_has_key_salt();
  key_salt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rpc.WorkGroupInfo.key_salt)
}
inline void WorkGroupInfo::set_key_salt(const char* value) {
  set_has_key_salt();
  key_salt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rpc.WorkGroupInfo.key_salt)
}
inline void WorkGroupInfo::set_key_salt(const char* value, size_t size) {
  set_has_key_salt();
  key_salt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rpc.WorkGroupInfo.key_salt)
}
inline ::std::string* WorkGroupInfo::mutable_key_salt() {
  set_has_key_salt();
  // @@protoc_insertion_point(field_mutable:rpc.WorkGroupInfo.key_salt)
  return key_salt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorkGroupInfo::release_key_salt() {
  clear_has_key_salt();
  return key_salt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkGroupInfo::set_allocated_key_salt(::std::string* key_salt) {
  if (key_salt != NULL) {
    set_has_key_salt();
  } else {
    clear_has_key_salt();
  }
  key_salt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_salt);
  // @@protoc_insertion_point(field_set_allocated:rpc.WorkGroupInfo.key_salt)
}

// optional int32 encryption_algo = 12;
inline bool WorkGroupInfo::has_encryption_algo() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void WorkGroupInfo::set_has_encryption_algo() {
  _has_bits_[0] |= 0x00000200u;
}
inline void WorkGroupInfo::clear_has_encryption_algo() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void WorkGroupInfo::clear_encryption_algo() {
  encryption_algo_ = 0;
  clear_has_encryption_algo();
}
inline ::google::protobuf::int32 WorkGroupInfo::encryption_algo() const {
  // @@protoc_insertion_point(field_get:rpc.WorkGroupInfo.encryption_algo)
  return encryption_algo_;
}
inline void WorkGroupInfo::set_encryption_algo(::google::protobuf::int32 value) {
  set_has_encryption_algo();
  encryption_algo_ = value;
  // @@protoc_insertion_point(field_set:rpc.WorkGroupInfo.encryption_algo)
}

// optional int32 encryption_type = 13;
inline bool WorkGroupInfo::has_encryption_type() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void WorkGroupInfo::set_has_encryption_type() {
  _has_bits_[0] |= 0x00000400u;
}
inline void WorkGroupInfo::clear_has_encryption_type() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void WorkGroupInfo::clear_encryption_type() {
  encryption_type_ = 0;
  clear_has_encryption_type();
}
inline ::google::protobuf::int32 WorkGroupInfo::encryption_type() const {
  // @@protoc_insertion_point(field_get:rpc.WorkGroupInfo.encryption_type)
  return encryption_type_;
}
inline void WorkGroupInfo::set_encryption_type(::google::protobuf::int32 value) {
  set_has_encryption_type();
  encryption_type_ = value;
  // @@protoc_insertion_point(field_set:rpc.WorkGroupInfo.encryption_type)
}

// optional int64 size = 16;
inline bool WorkGroupInfo::has_size() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void WorkGroupInfo::set_has_size() {
  _has_bits_[0] |= 0x00000800u;
}
inline void WorkGroupInfo::clear_has_size() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void WorkGroupInfo::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
  clear_has_size();
}
inline ::google::protobuf::int64 WorkGroupInfo::size() const {
  // @@protoc_insertion_point(field_get:rpc.WorkGroupInfo.size)
  return size_;
}
inline void WorkGroupInfo::set_size(::google::protobuf::int64 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:rpc.WorkGroupInfo.size)
}

// optional int64 creation_date = 17;
inline bool WorkGroupInfo::has_creation_date() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void WorkGroupInfo::set_has_creation_date() {
  _has_bits_[0] |= 0x00001000u;
}
inline void WorkGroupInfo::clear_has_creation_date() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void WorkGroupInfo::clear_creation_date() {
  creation_date_ = GOOGLE_LONGLONG(0);
  clear_has_creation_date();
}
inline ::google::protobuf::int64 WorkGroupInfo::creation_date() const {
  // @@protoc_insertion_point(field_get:rpc.WorkGroupInfo.creation_date)
  return creation_date_;
}
inline void WorkGroupInfo::set_creation_date(::google::protobuf::int64 value) {
  set_has_creation_date();
  creation_date_ = value;
  // @@protoc_insertion_point(field_set:rpc.WorkGroupInfo.creation_date)
}

// optional int64 deletion_date = 18;
inline bool WorkGroupInfo::has_deletion_date() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void WorkGroupInfo::set_has_deletion_date() {
  _has_bits_[0] |= 0x00002000u;
}
inline void WorkGroupInfo::clear_has_deletion_date() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void WorkGroupInfo::clear_deletion_date() {
  deletion_date_ = GOOGLE_LONGLONG(0);
  clear_has_deletion_date();
}
inline ::google::protobuf::int64 WorkGroupInfo::deletion_date() const {
  // @@protoc_insertion_point(field_get:rpc.WorkGroupInfo.deletion_date)
  return deletion_date_;
}
inline void WorkGroupInfo::set_deletion_date(::google::protobuf::int64 value) {
  set_has_deletion_date();
  deletion_date_ = value;
  // @@protoc_insertion_point(field_set:rpc.WorkGroupInfo.deletion_date)
}

// optional string creation_date_str = 19;
inline bool WorkGroupInfo::has_creation_date_str() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void WorkGroupInfo::set_has_creation_date_str() {
  _has_bits_[0] |= 0x00004000u;
}
inline void WorkGroupInfo::clear_has_creation_date_str() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void WorkGroupInfo::clear_creation_date_str() {
  creation_date_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_creation_date_str();
}
inline const ::std::string& WorkGroupInfo::creation_date_str() const {
  // @@protoc_insertion_point(field_get:rpc.WorkGroupInfo.creation_date_str)
  return creation_date_str_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkGroupInfo::set_creation_date_str(const ::std::string& value) {
  set_has_creation_date_str();
  creation_date_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rpc.WorkGroupInfo.creation_date_str)
}
inline void WorkGroupInfo::set_creation_date_str(const char* value) {
  set_has_creation_date_str();
  creation_date_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rpc.WorkGroupInfo.creation_date_str)
}
inline void WorkGroupInfo::set_creation_date_str(const char* value, size_t size) {
  set_has_creation_date_str();
  creation_date_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rpc.WorkGroupInfo.creation_date_str)
}
inline ::std::string* WorkGroupInfo::mutable_creation_date_str() {
  set_has_creation_date_str();
  // @@protoc_insertion_point(field_mutable:rpc.WorkGroupInfo.creation_date_str)
  return creation_date_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorkGroupInfo::release_creation_date_str() {
  clear_has_creation_date_str();
  return creation_date_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkGroupInfo::set_allocated_creation_date_str(::std::string* creation_date_str) {
  if (creation_date_str != NULL) {
    set_has_creation_date_str();
  } else {
    clear_has_creation_date_str();
  }
  creation_date_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), creation_date_str);
  // @@protoc_insertion_point(field_set_allocated:rpc.WorkGroupInfo.creation_date_str)
}

// optional string deletion_date_str = 20;
inline bool WorkGroupInfo::has_deletion_date_str() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void WorkGroupInfo::set_has_deletion_date_str() {
  _has_bits_[0] |= 0x00008000u;
}
inline void WorkGroupInfo::clear_has_deletion_date_str() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void WorkGroupInfo::clear_deletion_date_str() {
  deletion_date_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deletion_date_str();
}
inline const ::std::string& WorkGroupInfo::deletion_date_str() const {
  // @@protoc_insertion_point(field_get:rpc.WorkGroupInfo.deletion_date_str)
  return deletion_date_str_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkGroupInfo::set_deletion_date_str(const ::std::string& value) {
  set_has_deletion_date_str();
  deletion_date_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rpc.WorkGroupInfo.deletion_date_str)
}
inline void WorkGroupInfo::set_deletion_date_str(const char* value) {
  set_has_deletion_date_str();
  deletion_date_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rpc.WorkGroupInfo.deletion_date_str)
}
inline void WorkGroupInfo::set_deletion_date_str(const char* value, size_t size) {
  set_has_deletion_date_str();
  deletion_date_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rpc.WorkGroupInfo.deletion_date_str)
}
inline ::std::string* WorkGroupInfo::mutable_deletion_date_str() {
  set_has_deletion_date_str();
  // @@protoc_insertion_point(field_mutable:rpc.WorkGroupInfo.deletion_date_str)
  return deletion_date_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorkGroupInfo::release_deletion_date_str() {
  clear_has_deletion_date_str();
  return deletion_date_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkGroupInfo::set_allocated_deletion_date_str(::std::string* deletion_date_str) {
  if (deletion_date_str != NULL) {
    set_has_deletion_date_str();
  } else {
    clear_has_deletion_date_str();
  }
  deletion_date_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deletion_date_str);
  // @@protoc_insertion_point(field_set_allocated:rpc.WorkGroupInfo.deletion_date_str)
}

// optional bool is_deleted = 23;
inline bool WorkGroupInfo::has_is_deleted() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void WorkGroupInfo::set_has_is_deleted() {
  _has_bits_[0] |= 0x00010000u;
}
inline void WorkGroupInfo::clear_has_is_deleted() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void WorkGroupInfo::clear_is_deleted() {
  is_deleted_ = false;
  clear_has_is_deleted();
}
inline bool WorkGroupInfo::is_deleted() const {
  // @@protoc_insertion_point(field_get:rpc.WorkGroupInfo.is_deleted)
  return is_deleted_;
}
inline void WorkGroupInfo::set_is_deleted(bool value) {
  set_has_is_deleted();
  is_deleted_ = value;
  // @@protoc_insertion_point(field_set:rpc.WorkGroupInfo.is_deleted)
}

// optional int64 company_id = 24;
inline bool WorkGroupInfo::has_company_id() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void WorkGroupInfo::set_has_company_id() {
  _has_bits_[0] |= 0x00020000u;
}
inline void WorkGroupInfo::clear_has_company_id() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void WorkGroupInfo::clear_company_id() {
  company_id_ = GOOGLE_LONGLONG(0);
  clear_has_company_id();
}
inline ::google::protobuf::int64 WorkGroupInfo::company_id() const {
  // @@protoc_insertion_point(field_get:rpc.WorkGroupInfo.company_id)
  return company_id_;
}
inline void WorkGroupInfo::set_company_id(::google::protobuf::int64 value) {
  set_has_company_id();
  company_id_ = value;
  // @@protoc_insertion_point(field_set:rpc.WorkGroupInfo.company_id)
}

// optional int32 workgroup_type = 25;
inline bool WorkGroupInfo::has_workgroup_type() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void WorkGroupInfo::set_has_workgroup_type() {
  _has_bits_[0] |= 0x00040000u;
}
inline void WorkGroupInfo::clear_has_workgroup_type() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void WorkGroupInfo::clear_workgroup_type() {
  workgroup_type_ = 0;
  clear_has_workgroup_type();
}
inline ::google::protobuf::int32 WorkGroupInfo::workgroup_type() const {
  // @@protoc_insertion_point(field_get:rpc.WorkGroupInfo.workgroup_type)
  return workgroup_type_;
}
inline void WorkGroupInfo::set_workgroup_type(::google::protobuf::int32 value) {
  set_has_workgroup_type();
  workgroup_type_ = value;
  // @@protoc_insertion_point(field_set:rpc.WorkGroupInfo.workgroup_type)
}

// optional string workgroup_metadata = 26;
inline bool WorkGroupInfo::has_workgroup_metadata() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void WorkGroupInfo::set_has_workgroup_metadata() {
  _has_bits_[0] |= 0x00080000u;
}
inline void WorkGroupInfo::clear_has_workgroup_metadata() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void WorkGroupInfo::clear_workgroup_metadata() {
  workgroup_metadata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_workgroup_metadata();
}
inline const ::std::string& WorkGroupInfo::workgroup_metadata() const {
  // @@protoc_insertion_point(field_get:rpc.WorkGroupInfo.workgroup_metadata)
  return workgroup_metadata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkGroupInfo::set_workgroup_metadata(const ::std::string& value) {
  set_has_workgroup_metadata();
  workgroup_metadata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rpc.WorkGroupInfo.workgroup_metadata)
}
inline void WorkGroupInfo::set_workgroup_metadata(const char* value) {
  set_has_workgroup_metadata();
  workgroup_metadata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rpc.WorkGroupInfo.workgroup_metadata)
}
inline void WorkGroupInfo::set_workgroup_metadata(const char* value, size_t size) {
  set_has_workgroup_metadata();
  workgroup_metadata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rpc.WorkGroupInfo.workgroup_metadata)
}
inline ::std::string* WorkGroupInfo::mutable_workgroup_metadata() {
  set_has_workgroup_metadata();
  // @@protoc_insertion_point(field_mutable:rpc.WorkGroupInfo.workgroup_metadata)
  return workgroup_metadata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorkGroupInfo::release_workgroup_metadata() {
  clear_has_workgroup_metadata();
  return workgroup_metadata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkGroupInfo::set_allocated_workgroup_metadata(::std::string* workgroup_metadata) {
  if (workgroup_metadata != NULL) {
    set_has_workgroup_metadata();
  } else {
    clear_has_workgroup_metadata();
  }
  workgroup_metadata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), workgroup_metadata);
  // @@protoc_insertion_point(field_set_allocated:rpc.WorkGroupInfo.workgroup_metadata)
}

// optional int64 files_count = 27;
inline bool WorkGroupInfo::has_files_count() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void WorkGroupInfo::set_has_files_count() {
  _has_bits_[0] |= 0x00100000u;
}
inline void WorkGroupInfo::clear_has_files_count() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void WorkGroupInfo::clear_files_count() {
  files_count_ = GOOGLE_LONGLONG(0);
  clear_has_files_count();
}
inline ::google::protobuf::int64 WorkGroupInfo::files_count() const {
  // @@protoc_insertion_point(field_get:rpc.WorkGroupInfo.files_count)
  return files_count_;
}
inline void WorkGroupInfo::set_files_count(::google::protobuf::int64 value) {
  set_has_files_count();
  files_count_ = value;
  // @@protoc_insertion_point(field_set:rpc.WorkGroupInfo.files_count)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace rpc

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::rpc::Filter> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::rpc::Filter>() {
  return ::rpc::Filter_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_5fcommon_2eproto__INCLUDED
